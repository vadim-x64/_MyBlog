@page
@model IndexModel
@{
    ViewData["Title"] = "Головна сторінка";
}

<link rel="stylesheet" href="~/css/index.css">

<div class="container">
    <div class="row">
        <div class="col-12">
            <h1 class="display-4 text-center">Вітаємо на сторінці!</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="welcome-text">
                <p>Цей блог створений саме для вас! Тут ви можете вільно ділитися своїми думками, враженнями та
                    емоціями. Мали цікавий день? Розкажіть про нього! Хочете поділитися корисною порадою чи просто
                    висловити свій настрій? Це ідеальне місце для цього. Наша спільнота завжди рада новим історіям та
                    відкрита для конструктивних коментарів. Не соромтеся висловлювати себе та знаходити однодумців серед
                    наших читачів. Приєднуйтесь до нас і робіть цей блог ще яскравішим своїми унікальними дописами!</p>
                <div class="rules-notice">
                    <p><strong>Примітка:</strong> Будь ласка, дотримуйтесь правил спільноти. Забороняється використання
                        нецензурної лексики, спам та інший контент, що порушує етичні норми. Адміністрація блогу
                        здійснює модерацію всіх коментарів та дописів і залишає за собою право видаляти невідповідний
                        контент без попередження. У випадку систематичних порушень правил облікові записи користувачів
                        можуть бути заблоковані або видалені.</p>
                </div>
            </div>
        </div>
    </div>
    <div class="view-toggle">
        <div class="view-buttons-container">
            <div class="view-divider"></div>
            <button class="btn btn-sm" onclick="setLayout('grid')">
                <img
                    src="https://cdn-icons-png.freepik.com/256/18550/18550957.png?uid=R77081381&ga=GA1.1.1431085202.1736767274&semt=ais_hybrid"
                    alt="..." class="view-icon">
            </button>
            <button class="btn btn-sm" onclick="setLayout('list')">
                <img
                    src="https://cdn-icons-png.freepik.com/256/5404/5404118.png?uid=R77081381&ga=GA1.1.1431085202.1736767274"
                    alt="..." class="view-icon">
            </button>
        </div>
    </div>
    @if (!Model.Posts.Any())
    {
        <div class="alert alert-info text-center">
            Наразі немає жодного посту. Будьте першим, хто поділиться своїми думками!
        </div>
    }
    else
    {
        <div class="row" id="posts-container">
            @foreach (var post in Model.Posts)
            {
                <div class="col-md-6 col-lg-4 mb-4 post-card post-item" style="display: none">
                    <div class="card h-100">
                        <div class="card-content">
                            @if (post.UseLocalPhoto && post.LocalPhoto != null)
                            {
                                <img src="data:image/png;base64,@Convert.ToBase64String(post.LocalPhoto)" class="card-img-top" alt="@post.Title">
                            }
                            else if (!post.UseLocalPhoto && !string.IsNullOrEmpty(post.RemotePhotoUrl))
                            {
                                <img src="@post.RemotePhotoUrl" class="card-img-top"
                                     alt="@post.Title"
                                     onerror="this.onerror=null;this.src='';this.alt='...';this.style.display='none';">
                            }
                            <div class="card-text-wrapper">
                                <div>
                                    <a href="/Details/@post.Id" class="text-decoration-none text-dark">
                                        <h5 class="card-title">@post.Title</h5>
                                        <p class="card-text">@(post.Content.Length > 100 ? post.Content.Substring(0, 100) + "..." : post.Content)</p>
                                    </a>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="d-flex justify-content-between align-items-center foot">
                                
                                <div class="d-flex align-items-center">
                                    <a href="/UserProfile/@post.Author.Id" class="text-decoration-none d-flex align-items-center">
                                        @if (post.Author.Avatar != null)
                                        {
                                            <img src="data:image/png;base64,@Convert.ToBase64String(post.Author.Avatar)"
                                                 class="author-avatar"
                                                 alt="@post.Author.NickName">
                                        }
                                        else
                                        {
                                            <div class="author-placeholder">
                                                <span>@(!string.IsNullOrEmpty(post.Author.NickName) ? post.Author.NickName[0].ToString() : "U")</span>
                                            </div>
                                        }
                                        <div class="author-info">
                                            <p class="author-name">@post.Author.NickName</p>
                                            <p class="author-date">@post.UpdatedAt.ToString("dd.MM.yyyy HH:mm")</p>
                                        </div>
                                    </a>
                                </div>
                                <div class="like-section">
                                    @if (User.Identity?.IsAuthenticated == true)
                                    {
                                        <button type="button" 
                                                class="like-button @(Model.LikedPosts.GetValueOrDefault(post.Id) ? "liked" : "")"
                                                onclick="toggleLike('@post.Id', this)">
                                            <span class="like-icon">@(Model.LikedPosts.GetValueOrDefault(post.Id) ? "❤️" : "🤍")</span>
                                            <span class="like-count">@Model.LikesCount.GetValueOrDefault(post.Id)</span>
                                        </button>
                                    }
                                    else
                                    {
                                        <span class="text-muted like-display">
                                            🤍 <span class="like-count">@Model.LikesCount.GetValueOrDefault(post.Id)</span>
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="load-more-btn">
            <button id="load-more-button" class="btn btn-outline-secondary" onclick="loadMorePosts()">Завантажити ще
            </button>
        </div>
    }
    @Html.AntiForgeryToken()
</div>

@section Scripts {
    <script src="~/js/index.js"></script>

    <script>
        function createLikeExplosion(button) {
            const explosion = document.createElement('div');
            explosion.className = 'like-explosion';
            button.appendChild(explosion);

            // Створюємо сердечка
            for (let i = 0; i < 6; i++) {
                const heart = document.createElement('div');
                heart.className = 'heart-particle';
                heart.textContent = '❤️';

                const angle = (360 / 6) * i + Math.random() * 30;
                const distance = 30 + Math.random() * 20;
                const dx = Math.cos(angle * Math.PI / 180) * distance;
                const dy = Math.sin(angle * Math.PI / 180) * distance;

                heart.style.setProperty('--dx', dx + 'px');
                heart.style.setProperty('--dy', dy + 'px');
                heart.style.animationDelay = (i * 0.05) + 's';

                explosion.appendChild(heart);
            }

            // Створюємо блискавки
            for (let i = 0; i < 8; i++) {
                const sparkle = document.createElement('div');
                sparkle.className = 'sparkle-particle';

                const angle = (360 / 8) * i + Math.random() * 45;
                const distance = 20 + Math.random() * 25;
                const dx = Math.cos(angle * Math.PI / 180) * distance;
                const dy = Math.sin(angle * Math.PI / 180) * distance;

                sparkle.style.setProperty('--dx', dx + 'px');
                sparkle.style.setProperty('--dy', dy + 'px');
                sparkle.style.animationDelay = (i * 0.03) + 's';

                explosion.appendChild(sparkle);
            }

            setTimeout(() => {
                if (explosion.parentNode) {
                    explosion.parentNode.removeChild(explosion);
                }
            }, 1000);
        }

        function toggleLike(postId, button) {
            const formData = new FormData();
            formData.append('postId', postId);
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

            // Додаємо анімацію перед відправкою запиту
            const likeIcon = button.querySelector('.like-icon');
            const wasLiked = likeIcon.textContent === '❤️';

            if (!wasLiked) {
                button.classList.add('animating');
                createLikeExplosion(button);
            }

            fetch('/?handler=ToggleLike', {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    const likeCount = button.querySelector('.like-count');

                    setTimeout(() => {
                        likeIcon.textContent = data.isLiked ? '❤️' : '🤍';
                        likeCount.textContent = data.likesCount;

                        if (data.isLiked) {
                            button.classList.add('liked');
                        } else {
                            button.classList.remove('liked');
                        }
                        button.classList.remove('animating');
                    }, 100);
                })
                .catch(error => {
                    console.error('Помилка:', error);
                    button.classList.remove('animating');
                });
        }
    </script>
}